<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/10/25
 * Time: 10:06
 */
//���ע����
function create_guid($namespace = '') {
    static $guid = '';

    $uid = uniqid("", true);

    $data = $namespace;
    $data .= $_SERVER['REQUEST_TIME'];
    $data .= $_SERVER['HTTP_USER_AGENT'];
    $data .= $_SERVER['LOCAL_ADDR'];
    $data .= $_SERVER['LOCAL_PORT'];
    $data .= $_SERVER['REMOTE_ADDR'];
    $data .= $_SERVER['REMOTE_PORT'];

    $hash = strtoupper(hash('ripemd128', $uid . $guid . md5($data)));
    $guid = substr($hash, 0, 4) . substr($hash, 8, 4) . substr($hash, 12, 4) . substr($hash, 16, 4);

    return $guid;
}

/**
 * @param $msg （要发送的数据【数组】）
 * @param $receiver_value（要发送的机器码）
 * @return bool|mixed
 */
function sendInfo($msg,$receiver_value){
    $appkeys='13007151e25f4a067df93df1';
    $masterSecret='0ffaf85b288e16aa3d4b29ba';
    $sendno = 4;
    $receiver_value = md5($receiver_value);
    $platform = 'android' ;
    $msg_content = json_encode(array("message"=>$msg));
    $obj = new Think\jpush($masterSecret,$appkeys);
    $rel = $obj->send($sendno, 3, $receiver_value,2,$msg_content, $platform);
    return $rel;
}


/**
 * 发送模板短信
 * @param to 手机号码集合,用英文逗号分开
 * @param datas 内容数据 格式为数组 例如：array('Marry','Alon')，如不需替换请填 null
 * @param $tempId 模板Id
 */
function sendTemplateSMS($to,$datas,$tempId,$accountSid1,$accountToken1,$appId1)
{
    global $accountSid,$accountToken,$appId,$serverIP,$serverPort,$softVersion;
    //主帐号
//    $accountSid= '8a216da8582e9f53015842e551070c79';
    $accountSid= $accountSid1;

    //主帐号Token
//    $accountToken= 'ec3d93b608f943faa9ef5fcc051b253c';
    $accountToken= $accountToken1;

    //应用Id
//    $appId='8a216da8582e9f53015842e551ca0c7f';
    $appId=$appId1;

    //请求地址，格式如下，不需要写https://
    $serverIP='app.cloopen.com';

    //请求端口
    $serverPort='8883';

    //REST版本号
    $softVersion='2013-12-26';


    // 初始化REST SDK


    Vendor("SMS.REST");
    $rest = new \REST($serverIP,$serverPort,$softVersion);
    $rest->setAccount($accountSid,$accountToken);
    $rest->setAppId($appId);

    // 发送模板短信
    // echo "Sending TemplateSMS to $to <br/>";
    $result = $rest->sendTemplateSMS($to,$datas,$tempId);



    /*if($result == NULL ) {
        echo "result error!";
        return;
    }
    if($result->statusCode!=0) {
        echo "error code :" . $result->statusCode . "<br>";
        echo "error msg :" . $result->statusMsg . "<br>";
        //TODO 添加错误处理逻辑
    }else{
        echo "Sendind TemplateSMS success!<br/>";
        // 获取返回信息
        $smsmessage = $result->TemplateSMS;
        echo "dateCreated:".$smsmessage->dateCreated."<br/>";
        echo "smsMessageSid:".$smsmessage->smsMessageSid."<br/>";
        //TODO 添加成功处理逻辑
    }*/


    // by:jcm  2017/1/10
    if($result == NULL ) {
        $error = "result error!";
    }else if($result->statusCode!=0)
    {
        $error = "error code : $result->statusCode <br>error msg :$result->statusMsg";
    }else{
        $error = true;
    }

    return $error;
}



function http_get($url){
//    $url = "http://www.jb51.net";
    //初始化
    $ch = curl_init();
    //设置选项，包括URL
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_HEADER, 0);
    //执行并获取HTML文档内容
    $output = curl_exec($ch);
    //释放curl句柄
    curl_close($ch);
    return $output;
}

function http_post($url,$post_data){
//    $url = "http://localhost/web_services.php";
//    $post_data = array ("username" => "bob","key" => "12345");
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    // post数据
    curl_setopt($ch, CURLOPT_POST, 1);
    // post的变量
    curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data);
    $output = curl_exec($ch);
    curl_close($ch);
    //打印获得的数据
    return $output;
}

function sendMsgToDevice($post_data){
    $url = "http://shop.founya.com:2121";
//    $post_data ? :$post_data = array ("type" => "publish","to" => "1231231231","content" => "json字符串");
    $result = http_post($url,$post_data);
    return $result;
}

/**
 * 支付宝微信配置参数处理
 */
function dealConfigKeyForValue($config){
    $dealResult = array();
    foreach($config as $val){
        $dealResult[$val['config_name']] = $val['config_value'];
    }
    return $dealResult;
}

/**
 * 获取微信操作对象
 * @staticvar array $wechat
 * @param type $type
 * @return WechatReceive
 */
use PayMethod\Wechat\Loader;
use PayMethod\Wechat\WechatReceive;

function & load_wechat($type = '') {
    static $wechat = array();
    $index = md5(strtolower($type));
    if (!isset($wechat[$index])) {
        $configModel = D('config');
        $condition['config_type'] = "wxpay";
        $condition['restaurant_id'] = session("restaurant_id");
        $wxpay_config = $configModel->where($condition)->field("config_name,config_value")->select();
        $wxpay_c = dealConfigKeyForValue($wxpay_config);

        $config = array(
            'token'          => 'mytoken',
            'appid'          => $wxpay_c['wxpay_appid'],                           //绑定支付的APPID
            'appsecret'      => $wxpay_c['wxpay_appsecret'],             //公众帐号secert（仅JSAPI支付的时候需要配置， 登录公众平台，进入开发者中心可设置）
            'encodingaeskey' => 'eHSmk5yJN2vSsuYscC8aHIiXnrgXZSKA4MRL9csEwTv',
            'mch_id'         => $wxpay_c['wxpay_mchid'],                                   //商户号（必须配置，开户邮件中可查看）
            'partnerkey'     => $wxpay_c['wxpay_key'],             //商户支付密钥，参考开户邮件设置（必须配置，登录商户平台自行设置）
            'ssl_cer'        => '',
            'ssl_key'        => '',
        );

//        $config = array(
//            'token'          => 'mytoken',
//            'appid'          => 'wxa9be3598671d1982',                           //绑定支付的APPID
//            'appsecret'      => '14c17c03b92fbe64f1bd458561a0da08',             //公众帐号secert（仅JSAPI支付的时候需要配置， 登录公众平台，进入开发者中心可设置）
//            'encodingaeskey' => 'eHSmk5yJN2vSsuYscC8aHIiXnrgXZSKA4MRL9csEwTv',
//            'mch_id'         => '1411949302',                                   //商户号（必须配置，开户邮件中可查看）
//            'partnerkey'     => '12345678901234567890123456789012',             //商户支付密钥，参考开户邮件设置（必须配置，登录商户平台自行设置）
//            'ssl_cer'        => '',
//            'ssl_key'        => '',
//        );

        $config['cachepath'] = CACHE_PATH . 'Data/';
        $wechat[$index] = & Loader::get($type, $config);
    }
    return $wechat[$index];
}

function getOrderInfoForBill($order_sn){
    //获取订单的基本信息
    $orderModel = D("order");
    $condition['order_sn'] = $order_sn;
    $orderInfo = $orderModel->where($condition)->field("order_id,order_sn,table_num,total_amount,pay_time,restaurant_id,order_type,pay_type,desk_code,pay_num")->find();

    //获取订单的详细信息
    $order_id = $orderInfo['order_id'];
    $t_condition['order_id'] = $order_id;
    $order_food_model = D('order_food');
    $order_food_list = $order_food_model->where($t_condition)->field("order_food_id,food_num,food_price2,food_name")->select();
    $food_list = array();
    $ofaModel = D('order_food_attribute');
    foreach($order_food_list as $key => $val){
        $food = new FoodInfo();
        $food->food_name = $val['food_name'];
        $food->food_num = $val['food_num'];
        $food->food_price = $val['food_price2'];
        $ofa_condition['order_food_id'] = $val['order_food_id'];
        $fo_attr = $ofaModel->where($ofa_condition)->field("food_attribute_name")->select();
        $str = "";
        foreach($fo_attr as $kasd =>$vasd){
            if($vasd['food_attribute_name']){
                $str.=$vasd['food_attribute_name']." ";
            }
        }
        $food->food_attr = $str;
        $food_list[] = $food;
    }

    $orderInfo['food_list'] = $food_list;

    return $orderInfo;
}

//毫秒级延时函数 0<dblLong<1000
function MIEA_delay($dblLong){
    if ($dblLong>=1000)$dblLong=999;
    $startTime=floor(microtime()*1000);
    $endTime=$startTime+$dblLong;
    if ($endTime>999)$endTime=$endTime-999;
    while (floor(microtime()*1000)!=$endTime){
        //echo floor(microtime()*1000)."<br>";
    }
}


/**
 * 输入年份，返回该年份中每个月的开始时间与结束时间
 * @param $year(rs:2016)
 * @return array
 */
function monthForYear($year){
    $month = array();
    for($i = 1;$i <= 12;$i++){
        $v = $year."-".$i;
        $v2 = $year."-".($i+1);
        $month_start = strtotime($v);
        if($i == 12 ){
            $month_end = strtotime(($year+1)."-1")-1;
        }else{
            $month_end = strtotime($v2)-1;
        }
        $month[$i-1]['month_start'] = $month_start;
        $month[$i-1]['month_end'] = $month_end;
    }
    return $month;
}

/**
 * 输入年份，月份，输出该月份每一天开始时间与结束时间
 * @param $year
 * @param $month
 * @return array
 */
function dayForMonth($year,$month){
    $year? :$year = date("Y");
    $month? :$month = date("m");
    $days = get_days_by_year($year,$month);//返回当前月的天数
    $day_list = array();
    for($i=1;$i<=$days;$i++){
        $day_start = date($year."-".$month)."-".$i;
        $day_end = date($year."-".$month)."-".$i." 23:59:59";
        $day_list[$i-1]['day_start'] = strtotime($day_start);
        $day_list[$i-1]['day_end'] = strtotime($day_end);
    }
    return $day_list;//返回当前月的每天开始时间与结束时间，形如2016-01-01 00:00:00，2016-01-01 23:59:59的时间戳
}

/**
 * 输入年份，月份，输出该月份的天数
 * @param $year
 * @param $month
 * @return int
 */
function get_days_by_year($year,$month){
    //首先判断闰年
    if($year%400 == 0  || ($year%4 == 0 && $year%100 !== 0)){
        $rday = 29;
    }else{
        $rday = 28;
    }

    if($month ==2){
        $days = $rday;
    }else{
        //判断是大月（31），还是小月（30）
        $days = (($month - 1)%7%2) ? 30 : 31;
    }
    return $days;
}

class FoodInfo{
    public $food_name;
    public $food_num;
    public $food_price;
    public $food_attr;
}

	//横屏客户端模板颜色更换
	function change_telcolor(){
		$restaurant = D('Restaurant');
		$condition['restaurant_id'] = session("restaurant_id");
		$result = $restaurant->where($condition)->field('tplcolor_id')->find()['tplcolor_id'];
		return $result;
	}
	
	//竖屏客户端模板颜色更换
	function change_telcolor1(){
		$restaurant = D('Restaurant');
		$condition['restaurant_id'] = session("restaurant_id");
		$result = $restaurant->where($condition)->field('tplcolor1_id')->find()['tplcolor1_id'];
		return $result;
	}
	
	//移动端模板颜色更换
	function change_telcolor2(){
		$restaurant = D('Restaurant');
		$condition['restaurant_id'] = session("restaurant_id");
		$result = $restaurant->where($condition)->field('tplcolor2_id')->find()['tplcolor2_id'];
		return $result;
	}



	//PHPExcel导出excel方式
	function exportExcel($expTitle,$expCellName,$expTableData){
       	 $xlsTitle = iconv('utf-8', 'gb2312', $expTitle);//文件名称
       //	$xlsTitle = "营业额报表、导出时间(".date("Y-m-d",time()).")";
       // $fileName = $_SESSION['account'].date('_YmdHis');//or $xlsTitle 文件名称可根据自己情况设定
       	$fileName = "营业额报表、导出时间(".date("Y-m-d",time()).")";
        $cellNum = count($expCellName);
        $dataNum = count($expTableData);
        vendor("PHPExcel.PHPExcel");
       
       	import("Org.Util.PHPExcel");
        $objPHPExcel = new \PHPExcel();
        $cellName = array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','AA','AB','AC','AD','AE','AF','AG','AH','AI','AJ','AK','AL','AM','AN','AO','AP','AQ','AR','AS','AT','AU','AV','AW','AX','AY','AZ');
        
        $objPHPExcel->getActiveSheet(0)->mergeCells('A1:'.$cellName[$cellNum-1].'1');//合并单元格
       // $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A1', $expTitle.'  Export time:'.date('Y-m-d H:i:s'));  
        for($i=0;$i<$cellNum;$i++){
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[$i].'2', $expCellName[$i][1]); 
        } 
          // Miscellaneous glyphs, UTF-8   
        for($i=0;$i<$dataNum;$i++){
          for($j=0;$j<$cellNum;$j++){
            $objPHPExcel->getActiveSheet(0)->setCellValue($cellName[$j].($i+3), $expTableData[$i][$expCellName[$j][0]]);
          }             
        }  
        
        header('pragma:public');
        header('Content-type:application/vnd.ms-excel;charset=utf-8;name="'.$xlsTitle.'.xls"');
        header("Content-Disposition:attachment;filename=$fileName.xls");//attachment新窗口打印inline本窗口打印
        import("Org.Util.PHPExcel.IOFactory");
        $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');  
        $objWriter->save('php://output'); 
        exit;   
    }

	//PHPExcel导出excel方式
	function exportExcel1($expTitle,$xlsSearchDate,$expTableData){
      	 $xlsTitle = iconv('utf-8', 'gb2312', $expTitle);//文件名称
       //	$xlsTitle = "营业额报表、导出时间(".date("Y-m-d",time()).")";
       // $fileName = $_SESSION['account'].date('_YmdHis');//or $xlsTitle 文件名称可根据自己情况设定
       	$fileName = $expTitle;
        $dataNum = count($expTableData);
        vendor("PHPExcel.PHPExcel");
       
       	import("Org.Util.PHPExcel");
        $objPHPExcel = new \PHPExcel();
        $cellName = array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','AA','AB','AC','AD','AE','AF','AG','AH','AI','AJ','AK','AL','AM','AN','AO','AP','AQ','AR','AS','AT','AU','AV','AW','AX','AY','AZ');
        
        $objPHPExcel->getActiveSheet(0)->mergeCells('B1:I1');//合并单元格
        $objPHPExcel->getActiveSheet(0)->setCellValue('B1',$xlsSearchDate);
        for($i=2;$i<$dataNum*4;$i+=4){
        	static $j=0;
      		$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[0].$i,$j+1);
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[1].$i,$expTableData[$j]['food_name']);		
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[2].$i,'当前查询'); 
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[3].$i,$expTableData[$j]['food_num']."份");
			
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[2].($i+1),$expTableData[$j]['year1']."年"); //前年
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[2].($i+2),$expTableData[$j]['year']."年");  //去年
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[2].($i+3),"月份");  //去年
			
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[3].($i+1),$expTableData[$j]['lastyear_allOrderNum1'][0]."份"); //1月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[4].($i+1),$expTableData[$j]['lastyear_allOrderNum1'][1]."份"); //2月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[5].($i+1),$expTableData[$j]['lastyear_allOrderNum1'][2]."份"); //3月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[6].($i+1),$expTableData[$j]['lastyear_allOrderNum1'][3]."份"); //4月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[7].($i+1),$expTableData[$j]['lastyear_allOrderNum1'][4]."份"); //5月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[8].($i+1),$expTableData[$j]['lastyear_allOrderNum1'][5]."份"); //6月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[9].($i+1),$expTableData[$j]['lastyear_allOrderNum1'][6]."份"); //7月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[10].($i+1),$expTableData[$j]['lastyear_allOrderNum1'][7]."份"); //8月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[11].($i+1),$expTableData[$j]['lastyear_allOrderNum1'][8]."份"); //9月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[12].($i+1),$expTableData[$j]['lastyear_allOrderNum1'][9]."份"); //10月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[13].($i+1),$expTableData[$j]['lastyear_allOrderNum1'][10]."份"); //11月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[14].($i+1),$expTableData[$j]['lastyear_allOrderNum1'][11]."份"); //12月
			
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[3].($i+2),$expTableData[$j]['lastyear_allOrderNum'][0]."份"); //1月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[4].($i+2),$expTableData[$j]['lastyear_allOrderNum'][1]."份"); //2月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[5].($i+2),$expTableData[$j]['lastyear_allOrderNum'][2]."份"); //3月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[6].($i+2),$expTableData[$j]['lastyear_allOrderNum'][3]."份"); //4月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[7].($i+2),$expTableData[$j]['lastyear_allOrderNum'][4]."份"); //5月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[8].($i+2),$expTableData[$j]['lastyear_allOrderNum'][5]."份"); //6月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[9].($i+2),$expTableData[$j]['lastyear_allOrderNum'][6]."份"); //7月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[10].($i+2),$expTableData[$j]['lastyear_allOrderNum'][7]."份"); //8月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[11].($i+2),$expTableData[$j]['lastyear_allOrderNum'][8]."份"); //9月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[12].($i+2),$expTableData[$j]['lastyear_allOrderNum'][9]."份"); //10月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[13].($i+2),$expTableData[$j]['lastyear_allOrderNum'][10]."份"); //11月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[14].($i+2),$expTableData[$j]['lastyear_allOrderNum'][11]."份"); //12月
			
			
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[3].($i+3),"1月"); //1月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[4].($i+3),"2月"); //2月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[5].($i+3),"3月"); //3月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[6].($i+3),"4月"); //4月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[7].($i+3),"5月"); //5月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[8].($i+3),"6月"); //6月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[9].($i+3),"7月"); //7月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[10].($i+3),"8月"); //8月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[11].($i+3),"9月"); //9月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[12].($i+3),"10月"); //10月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[13].($i+3),"11月"); //11月
			$objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[14].($i+3),"12月"); //12月
			
			$j++; 
        }  
    
        header('pragma:public');
        header('Content-type:application/vnd.ms-excel;charset=utf-8;name="'.$xlsTitle.'.xls"');
        header("Content-Disposition:attachment;filename=$fileName.xls");//attachment新窗口打印inline本窗口打印
        import("Org.Util.PHPExcel.IOFactory");
        $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');  
        $objWriter->save('php://output'); 
        exit;   
    }



//推送取餐信息取餐叫号机和核销机
function sendTakeOutMsg($order_sn){
    $orderModel = D("order_sn");
    $o_condition['order_sn'] = $order_sn;
    //获取订单信息，判断是否要推送到展示餐牌号展示页面
    $orderInfo = $orderModel->where($o_condition)->field("table_num,desk_code,restaurant_id")->find();
    $restaurantModel = D("Restaurant");
    $rr_condition['restaurant_id'] = $orderInfo['restaurant_id'];
    $show_device_code = $restaurantModel->where($rr_condition)->field("show_num_d")->find()['show_num_d'];
    if($orderInfo['table_num'] == 0 && $orderInfo['desk_code'] == 0){
        $content['tips'] = "下单成功推送showNum";
        $contentJson = json_encode($content);
        $post_data = array ("type" => "publish","to" => $show_device_code,"content" => $contentJson);
        $rel2 = sendMsgToDevice($post_data);
    }
}

function array_page($array,$rows=15,$page=1){
    $count=count($array);
    $Page= new \Think\PageAjax($count,$rows);
	$pageattr['show'] = $Page->show();// 分页显示输出
    $pageattr['list'] =array_slice($array,($page-1)*$rows,$rows);
    return $pageattr;
}




// by:jcm 2017/1/9
# 断点调试
function p($str = ''){
    echo "<pre>";
    print_r($str);
    echo "</pre>";
    exit;
}


//Auth权限验证 - 控制器
function action_AuthCheck($ruleName,$userId,$relation='or'){
	$Auth = new \Think\Auth();
	if(empty($userId)){
		$userId = $_SESSION['manager_id'];
	}
	$type=1;
	$mode='url';
	return $Auth->check($ruleName,$userId,$type,$mode,$relation);
}

//Auth权限验证 - 模板调用
function tpl_AuthCheck($ruleName,$userId,$relation='or',$t,$f='false'){
	//$relation = or|and; //默认为'or' 表示满足任一条规则即通过验证; 'and'则表示需满足所有规则才能通过验证
	$Auth = new \Think\Auth();
	
	if(empty($userId)){ //用户ID判断，没有就取当前登录的用户ID
	$userId = $_SESSION['manager_id'];
	}
	$type=1; //分类-具体是什么没搞懂，默认为:1
	$mode='url'; //执行check的模式,默认为:url	
	return $Auth->check($ruleName,$userId,$type,$mode,$relation) ? $t : $f;
}



# 单文件上传
function upload()
{
    // 文件域的下标（字段名）
    $key = key($_FILES);

    // 如果没有上传文件
    if(! $_FILES[$key]['size'])
    {
        return array();
    }

    $upload = new \Think\Upload();// 实例化上传类
    $upload->maxSize   =     3145728 ;// 设置附件上传大小
    $upload->exts      =     array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型

    // 方法一：(目录程序会自动创建)
    $upload->rootPath = './';
   /* $upload->savePath  = ltrim($_POST['_rootpath'], '/') . '/'; // 设置附件上传目录*/
    $upload->savePath  = ltrim($_POST['_rootpath'] ? $_POST['_rootpath'] : "/Public/Uploads/Goods_desc", '/') . '/'; // 设置附件上传目录


    // 方法二(目录必须手工创建)
    # $upload->rootPath = './Public/Uploads/'; // 设置附件上传目录

    // 上传文件
    $info = $upload->upload();

    // 入库
    $_POST[$key] = date('Y-m-d') . '/' . $info[$key]['savename'];
    // p($_POST[$key]);

    if(!$info)
    {
        // 上传错误提示错误信息
        return $upload->getError();
    }else
    {
        return $info;
    }
}

//多维数组转一维数组
	function arrayChange($a){
	    static $arr2;
	    foreach($a as $v){
	        if(is_array($v)){
	            arrayChange($v);
	        }else{
	            $arr2[]=$v;
	        }
	    }
	    return $arr2;
	}




